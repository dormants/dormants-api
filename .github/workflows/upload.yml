name: Upload to S3

on:
  release:
    types: [created]

jobs:
  deploy:
    name: Upload
    runs-on: ubuntu-18.04
    environment: production

    steps:
      - uses: actions/checkout@v3
        name: Checkout code
        with:
          fetch-depth: 0 # üëà Required to retrieve git history

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Set env
        run: |
          echo "NODE_ENV=$NODE_ENV" >> .env
          echo "NAME=$NAME" >> .env
          echo "URL=$URL" >> .env
          echo "PORT=$PORT" >> .env
          echo "TZ=$TZ" >> .env
          echo "MYSQL_HOST=$MYSQL_HOST" >> .env
          echo "MYSQL_PORT=$MYSQL_PORT" >> .env
          echo "MYSQL_PASSWORD=$MYSQL_PASSWORD" >> .env
          echo "MYSQL_USERNAME=$MYSQL_USERNAME" >> .env
          echo "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD" >> .env
          echo "MYSQL_DATABASE=$MYSQL_DATABASE" >> .env
          echo "MYSQL_TYPEORM_ENTITIES=$MYSQL_TYPEORM_ENTITIES" >> .env
          echo "MYSQL_LOGGING=$MYSQL_LOGGING" >> .env
          echo "MYSQL_LOGGING=$MYSQL_LOGGING" >> .env
          echo "MYSQL_MIGRATIONS_RUN=$MYSQL_MIGRATIONS_RUN" >> .env
          echo "MYSQL_CACHES=$MYSQL_CACHES" >> .env
        env:
          NODE_ENV: production
          NAME: dormants-api
          URL: ${{ secrets.URL }}
          PORT: ${{ secrets.PORT }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_TYPEORM_ENTITIES: ${{ secrets.MYSQL_TYPEORM_ENTITIES }}
          MYSQL_LOGGING: ${{ secrets.MYSQL_LOGGING }}
          MYSQL_MIGRATIONS_RUN: ${{ secrets.MYSQL_MIGRATIONS_RUN }}
          MYSQL_CACHES: ${{ secrets.MYSQL_CACHES }}

      - name: Build
        run: npm run build

      - name: Zip Artifacts
        run: zip dormants-api.zip -r . -x './.github/*' -x './test/*' -x './.git/*' -x './node_modules/*' -x './vscode' -x './scripts'

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_UPLOAD_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_UPLOAD_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true
        run: |
          aws s3 cp ./dormants-api.zip s3://dormants-api-source

      # Deploy to Elastic Beanstalk
      # application_nameÍ≥º environment_nameÏùÑ Íº≠ ÌôïÏù∏ÌïòÏûê!
      # Ìï¥Îãπ Î∂ÄÎ∂ÑÏùÄ Íº≠ Í∞ôÏïÑÏïº ÌïúÎã§!!
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_EB_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_EB_SECRET_ACCESS_KEY }}
          application_name: dormant-api
          environment_name: Dormantsapi-env-1
          region: ${{ secrets.AWS_REGION }}
          version_label: ${{github.event.release.tag_name}}
          deployment_package: dormants-api.zip
